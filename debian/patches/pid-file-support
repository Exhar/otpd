Index: otp/extern.h
===================================================================
--- otp.orig/extern.h	2012-09-10 23:17:34.066227267 +0200
+++ otp/extern.h	2012-09-10 23:17:53.145405999 +0200
@@ -35,6 +35,9 @@
 /* plugin rendezvous point */
 #define OTPD_PLUGIN_RP "/var/run/otpd/socket"
 
+/* pid file */
+#define OTPD_PIDFILE  "/var/run/otpd.pid"
+
 /* statedir */
 #define OTPD_STATEDIR "/etc/otpstate"
 
Index: otp/main.c
===================================================================
--- otp.orig/main.c	2012-09-10 23:14:29.488618787 +0200
+++ otp/main.c	2012-09-10 23:17:30.064956223 +0200
@@ -47,6 +47,7 @@
 pthread_attr_t attr_detached;		/* create all threads detached */
 
 char *opt_c;				/* config file      */
+char *opt_pid;                          /* PID file         */
 char *opt_u;				/* user             */
 char *opt_p;				/* plugin rp        */
 char *opt_d;				/* log_level        */
@@ -86,6 +87,7 @@
 {
   pid_t pid;
   int fd0, fd1, fd2;
+  FILE *pidfd;
   int i;
 #ifndef HAVE_CLOSEFROM
   struct rlimit rl;
@@ -150,6 +152,17 @@
     mlog(LOG_CRIT, "%s: unexpected fd's %d %d %d", __func__, fd0, fd1, fd2);
     exit(1);
   }
+   /* record our pid */
+   if (!opt_pid)
+     opt_pid = OTPD_PIDFILE;
+
+  if ((pidfd = fopen(opt_pid,"w")) != (FILE *) NULL) {
+    fprintf(pidfd, "%d\n", getpid());
+    fclose(pidfd);
+  } else {
+    mlog(LOG_CRIT, "%s: could not write PID file %s" , __func__, opt_pid);
+    exit(1);
+  }
 
   /* initialize syslog */
   mopenlog(basename(progname), LOG_PID|LOG_NDELAY);
@@ -166,6 +179,7 @@
 "       -c <file>    use config file <file>\n"
 "       -u <user>    run as user <user> \n"
 "       -p <rp>      listen to plugins at rendezvous point <rp> \n"
+"       -P <pidfile> (daemon only) write out our PID to file <pidfile>\n"
 "       -f           run in foreground\n"
 "       -d <level>   set debug level <level>\n"
 "       -D           set max debug level\n",
@@ -187,12 +201,14 @@
   {
     int c;
 
-    while ((c = getopt(argc, argv, ":hvc:d:fDu:p:")) != -1) {
+    while ((c = getopt(argc, argv, ":hvc:P:d:fDu:p:")) != -1) {
       switch (c) {
       case 'c':		/* config file */
         opt_c = optarg;
         break;
-
+      case 'P':               /* PID file */
+        opt_pid = optarg;
+        break;
       case 'd':		/* debug */
         opt_d = optarg;
         break;
@@ -270,6 +286,10 @@
     (void) sigemptyset(&set);
     (void) pthread_sigmask(SIG_SETMASK, &set, NULL);
 
+    /* unlink our PID file */
+    unlink(OTPD_PIDFILE);
+
+    /* wait for all threads to shut down */
     for (;;)
       (void) pause();
   }
